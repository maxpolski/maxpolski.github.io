{"version":3,"sources":["store/actions/movies.js","store/constants/movies.js","store/reducers/movies/index.js","store/reducers/movies/movies.js","store/constants/modals.js","store/actions/modals.js","store/reducers/ui/modals/index.js","store/reducers/ui/modals/modals.js","store/reducers/ui/index.js","store/reducers/index.js","config/index.js","api/movies.js","store/sagas/movies.js","store/sagas/index.js","store/index.js","components/MovieList/MovieList.js","components/MovieList/index.js","components/MovieList/MovieList.styles.js","store/selectors/ui.js","components/modals/common/styles/MovieModal.style.js","components/modals/MovieDeleteModal/MovieDeleteModal.js","components/modals/MovieDeleteModal/index.js","utils/validators.js","components/modals/common/components/MovieDataForm/components/YearSelector/index.js","components/modals/common/components/MovieDataForm/components/YearSelector/YearSelector.js","components/modals/common/components/MovieDataForm/components/GenresSelector/index.js","components/modals/common/components/MovieDataForm/components/GenresSelector/GenresSelector.js","components/modals/common/components/MovieDataForm/MovieDataForm.js","components/modals/common/components/MovieDataForm/index.js","components/modals/MovieEditModal/index.js","components/modals/MovieEditModal/MovieEditModal.js","components/modals/MovieAddModal/index.js","components/modals/MovieAddModal/MovieAddModal.js","pages/App/theme.js","pages/App/index.js","pages/App/App.js","index.js"],"names":["getMovies","createAction","getMoviesCompleted","editMovie","addMovie","addMovieCompleted","deleteMovie","moviesReducer","handleActions","_handleActions","Object","defineProperty","state","action","toConsumableArray","payload","filter","m","id","movieToEditIndex","findIndex","concat","slice","objectSpread","MOVIE_EDIT_MODAL","MOVIE_ADD_MODAL","showDeleteMovieModal","showEditMovieModal","showAddMovieModal","hideDeleteMovieModal","hideEditMovieDataModal","hideAddMovieModal","modalsReducer","modals_handleActions","shownModal","movieToDeleteId","movieToEditId","combineActions","undefined","combineReducers","modals","form","formReducer","movies","ui","config","Promise","all","map","replace","fetch","then","r","json","fetchMoviesSaga","addMovieSaga","response","regenerator_default","a","wrap","_context","prev","next","call","sent","data","imdbID","icon","Poster","title","Title","genre","Genre","split","length","year","Number","parseInt","Year","director","Director","runtime","Runtime","put","stop","_marked","this","_context2","createId","_marked2","sagas_movies","takeEvery","rootSaga","moviesSagas","sagas_marked","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","run","MovieList","showDeleteMoviePopupHandler","movieId","_this","props","showEditMoviePopupHandler","_this2","_this$props","classes","react_default","createElement","className","classnames","root","Grid_default","container","spacing","movie","lg","md","sm","xs","item","key","Card_default","CardMedia_default","media","image","CardContent_default","Typography_default","gutterBottom","variant","component","sentence","word","l","toLowerCase","join","charAt","toUpperCase","c","test","CardActions_default","Button_default","onClick","size","color","IconButton_default","aria-label","addBtn","Add_default","Component","mapDispatchToProps","getMoviesAction","showDeleteMovieModalAction","showEditMovieModalAction","showAddMovieModalAction","withStyles","height","marginTop","marginRight","backgroundColor","flexGrow","overflow","padding","connect","enhancers","getAllMovies","getMovieById","find","getDataForMovieToDelete","createSelector","getDataForMovieToEdit","getShownModal","MovieModal_style","paper","width","outline","yearSelectList","maxHeight","inputField","marginBottom","errorLabel","position","bottom","hideDeleteMovieModalAction","deleteMovieAction","MovieDeleteModal","shouldShow","styles","Dialog_default","open","onClose","DialogTitle_default","DialogActions_default","autoFocus","required","value","YearSelector","withProps","startYear","endYear","yearsArray","Array","from","Field","fullWidth","select","label","validate","TextField","name","FormHelperTextProps","SelectProps","MenuProps","MenuListProps","index","MenuItem_default","toString","GenresSelector","genresList","multiple","MovieDataForm","handleSubmitClick","values","dispatch","modalName","checkIsDuplicatingName","SubmissionError","handleClose","_this$props2","reset","newTitle","some","_this$props3","handleSubmit","isShown","modalTitle","DialogContent_default","onSubmit","type","components_YearSelector","components_GenresSelector","InputProps","endAdornment","InputAdornment_default","mapStateToProps","ownProps","movieToEditData","initialValues","editMovieAction","hideEditMovieDataModalAction","addMovieAction","resetFormAction","reduxForm","enableReinitialize","MovieEditModal","createFrom","MovieAddModal","createMuiTheme","typography","useNextVariants","App","MuiThemeProvider_default","theme","es","store","components_MovieList","modals_MovieDeleteModal","modals_MovieEditModal","modals_MovieAddModal","ReactDOM","render","pages_App","document","getElementById"],"mappings":"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","file":"static/js/main.a2b1b9ec.chunk.js","sourcesContent":["import { createAction } from 'redux-actions'\n\nimport {\n  ADD_MOVIE,\n  DELETE_MOVIE,\n  GET_MOVIES,\n  GET_MOVIES_COMPLETED,\n  EDIT_MOVIE,\n  ADD_MOVIE_COMPLETED,\n} from '../constants/movies'\n\nexport const getMovies = createAction(GET_MOVIES)\nexport const getMoviesCompleted = createAction(GET_MOVIES_COMPLETED)\n\nexport const editMovie = createAction(EDIT_MOVIE)\n\nexport const addMovie = createAction(ADD_MOVIE)\nexport const addMovieCompleted = createAction(ADD_MOVIE_COMPLETED)\n\nexport const deleteMovie = createAction(DELETE_MOVIE)\n","export const GET_MOVIES = 'GET_MOVIES'\nexport const GET_MOVIES_COMPLETED = 'GET_MOVIES_COMPLETED'\nexport const GET_MOVIES_REJECTED = 'GET_MOVIES_REJECTED'\n\nexport const ADD_MOVIE = 'ADD_MOVIE'\nexport const ADD_MOVIE_COMPLETED = 'ADD_MOVIE_COMPLETED'\nexport const ADD_MOVIE_REJECTED = 'ADD_MOVIE_REJECTED'\n\nexport const EDIT_MOVIE = 'EDIT_MOVIE'\n\nexport const DELETE_MOVIE = 'DELETE_MOVIE'\nexport const DELETE_MOVIE_COMPLETED = 'DELETE_MOVIE_COMPLETED'\nexport const DELETE_MOVIE_REJECTED = 'DELETE_MOVIE_REJECTED'\n","import moviesReducer from './movies'\n\nexport default moviesReducer\n","import { handleActions } from 'redux-actions'\n\nimport {\n  getMoviesCompleted,\n  deleteMovie,\n  editMovie,\n  addMovieCompleted,\n} from '../../actions/movies'\n\nexport default handleActions({\n  [getMoviesCompleted]: (state, action) => [...action.payload],\n  [deleteMovie]: (state, action) => state.filter(m => m.id !== action.payload),\n  [editMovie]: (state, action) => {\n    const movieToEditIndex = state.findIndex(m => m.id === action.payload.id)\n    return [\n      ...state.slice(0, movieToEditIndex),\n      {\n        ...action.payload,\n      },\n      ...state.slice(movieToEditIndex + 1),\n    ]\n  },\n  [addMovieCompleted]: (state, action) => [...state, action.payload],\n}, [])\n","export const SHOW_DELETE_MOVIE_MODAL = 'SHOW_DELETE_MOVIE_MODAL'\nexport const SHOW_EDIT_MOVIE_MODAL = 'SHOW_EDIT_MOVIE_MODAL'\nexport const SHOW_ADD_MOVIE_MODAL = 'SHOW_ADD_MOVIE_MODAL'\n\nexport const HIDE_EDIT_MOVIE_DATA_MODAL = 'HIDE_EDIT_MOVIE_DATA_MODAL'\nexport const HIDE_ADD_MOVIE_MODAL = 'HIDE_ADD_MOVIE_MODAL'\nexport const HIDE_DELETE_MOVIE_MODAL = 'HIDE_DELETE_MOVIE_MODAL'\n\nexport const MOVIE_DELETE_MODAL = 'MOVIE_DELETE_MODAL'\nexport const MOVIE_EDIT_MODAL = 'MOVIE_EDIT_MODAL'\nexport const MOVIE_ADD_MODAL = 'MOVIE_ADD_MODAL'\n","import { createAction } from 'redux-actions'\n\nimport {\n  SHOW_DELETE_MOVIE_MODAL,\n  HIDE_DELETE_MOVIE_MODAL,\n  SHOW_EDIT_MOVIE_MODAL,\n  HIDE_EDIT_MOVIE_DATA_MODAL,\n  SHOW_ADD_MOVIE_MODAL,\n  HIDE_ADD_MOVIE_MODAL,\n} from '../constants/modals'\n\nexport const showDeleteMovieModal = createAction(SHOW_DELETE_MOVIE_MODAL)\nexport const showEditMovieModal = createAction(SHOW_EDIT_MOVIE_MODAL)\nexport const showAddMovieModal = createAction(SHOW_ADD_MOVIE_MODAL)\nexport const hideDeleteMovieModal = createAction(HIDE_DELETE_MOVIE_MODAL)\nexport const hideEditMovieDataModal = createAction(HIDE_EDIT_MOVIE_DATA_MODAL)\nexport const hideAddMovieModal = createAction(HIDE_ADD_MOVIE_MODAL)\n","import modalsReducer from './modals'\n\nexport default modalsReducer\n","import { handleActions, combineActions } from 'redux-actions'\n\nimport {\n  showDeleteMovieModal,\n  hideDeleteMovieModal,\n  showEditMovieModal,\n  hideEditMovieDataModal,\n  showAddMovieModal,\n  hideAddMovieModal,\n} from '../../../actions/modals'\nimport { MOVIE_DELETE_MODAL, MOVIE_EDIT_MODAL, MOVIE_ADD_MODAL } from '../../../constants/modals'\n\nexport default handleActions({\n  [showAddMovieModal]: state => ({\n    ...state,\n    shownModal: MOVIE_ADD_MODAL,\n  }),\n  [showDeleteMovieModal]: (state, action) => ({\n    ...state,\n    shownModal: MOVIE_DELETE_MODAL,\n    movieToDeleteId: action.payload,\n  }),\n  [showEditMovieModal]: (state, action) => ({\n    ...state,\n    shownModal: MOVIE_EDIT_MODAL,\n    movieToEditId: action.payload,\n  }),\n  [combineActions(hideDeleteMovieModal, hideEditMovieDataModal, hideAddMovieModal)]: state => ({\n    ...state,\n    shownModal: '',\n    movieToDeleteId: undefined,\n    movieToEditId: undefined,\n  }),\n}, { shownModal: '', movieToDeleteId: undefined, movieToEditId: undefined })\n","import { combineReducers } from 'redux'\n\nimport modalsReducer from './modals'\n\nexport default combineReducers({\n  modals: modalsReducer,\n})\n","import { combineReducers } from 'redux'\nimport { reducer as formReducer } from 'redux-form'\n\nimport movies from './movies'\nimport ui from './ui'\n\nexport default combineReducers({\n  form: formReducer,\n  movies,\n  ui,\n})\n","export default {\n  MOVIES_API_KEY: 'ee9fbbc',\n}\n","import config from '../config'\n\n// eslint-disable-next-line\nexport const getMovies = () => {\n  const moviesTitles = [\n    'The Grand Budapest Hotel',\n    'isle of dogs',\n    'the double',\n    'moonrise kingdom',\n    'star wars',\n    'Inglourious Basterds',\n    'kill bill',\n    'django unchained',\n  ]\n\n  return Promise.all(\n    moviesTitles.map(m => m.replace(' ', '+')).map(\n      m => fetch(`https://www.omdbapi.com/?t=${m}&apikey=${config.MOVIES_API_KEY}`).then(r => r.json()),\n    ),\n  )\n}\n","import {\n  takeEvery, call, put,\n} from 'redux-saga/effects'\nimport createId from 'uniqid'\n\nimport { GET_MOVIES, ADD_MOVIE } from '../constants/movies'\nimport { getMoviesCompleted, addMovieCompleted } from '../actions/movies'\nimport { getMovies } from '../../api/movies'\n\nfunction* fetchMoviesSaga() {\n  const response = yield call(getMovies)\n\n  const movies = response.map(data => ({\n    id: data.imdbID,\n    icon: data.Poster,\n    title: data.Title,\n    genre: data.Genre.split(', ').length ? data.Genre.split(', ')[0] : data.Genre,\n    year: Number.parseInt(data.Year, 10),\n    director: data.Director,\n    runtime: Number.parseInt(data.Runtime.split(' ')[0], 10),\n  }))\n\n  yield put(getMoviesCompleted(movies))\n}\n\nfunction* addMovieSaga(action) {\n  const id = createId()\n\n  yield put(addMovieCompleted({ ...action.payload, id }))\n}\n\nexport default [takeEvery(GET_MOVIES, fetchMoviesSaga), takeEvery(ADD_MOVIE, addMovieSaga)]\n","import { all } from 'redux-saga/effects'\nimport moviesSagas from './movies'\n\nexport default function* rootSaga() {\n  yield all([...moviesSagas])\n}\n","import { applyMiddleware, compose, createStore } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\n\nimport rootReducer from './reducers'\nimport rootSaga from './sagas'\n\nconst sagaMiddleware = createSagaMiddleware()\n// eslint-disable-next-line no-underscore-dangle\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\n\nexport default createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware)),\n)\n\nsagaMiddleware.run(rootSaga)\n","import React, { Component } from 'react'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport classnames from 'classnames'\n\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport Grid from '@material-ui/core/Grid'\nimport Card from '@material-ui/core/Card'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardActions from '@material-ui/core/CardActions'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport AddIco from '@material-ui/icons/Add'\n\nimport { getMovies as getMoviesAction } from '../../store/actions/movies'\nimport {\n  showDeleteMovieModal as showDeleteMovieModalAction,\n  showEditMovieModal as showEditMovieModalAction,\n  showAddMovieModal as showAddMovieModalAction,\n} from '../../store/actions/modals'\n\nimport styles from './MovieList.styles'\n\nconst transformTitle = (title) => {\n  const removeSpecChars = sentence => sentence.split('').filter(c => /[A-Za-z0-9]+|\\s/.test(c)).join('')\n  const capitalize = sentence => sentence.split(' ').map(\n    word => word.split('').map(l => l.toLowerCase()).join(''),\n  ).map(\n    word => `${word.charAt(0).toUpperCase()}${word.slice(1)}`,\n  ).join(' ')\n\n  /* It could be written down with pipelines syntax in the following way\n  * ```\n  * title |> removeSpecChars |> capitalize\n  * ```\n  * but it requires the corresponding babel plugin\n  * which in its turn requires react-app-rewired to be installed\n  * as for me it is an overkill to add all these tools to enable one single feature\n  */\n  return compose(capitalize, removeSpecChars)(title)\n}\n\nclass MovieList extends Component {\n  componentDidMount() {\n    const {\n      getMovies,\n    } = this.props\n\n    getMovies()\n  }\n\n  showDeleteMoviePopupHandler = movieId => () => {\n    const {\n      showDeleteMovieModal,\n    } = this.props\n\n    showDeleteMovieModal(movieId)\n  }\n\n  showEditMoviePopupHandler = movieId => () => {\n    const {\n      showEditMovieModal,\n    } = this.props\n\n    showEditMovieModal(movieId)\n  }\n\n  render() {\n    const {\n      movies,\n      classes,\n      showAddMovieModal,\n    } = this.props\n\n    return (\n      <div className={classnames(classes.root, 'container-fluid')}>\n\n        <div className=\"row flex-column\">\n          <Grid\n            container\n            spacing={24}\n          >\n            {movies.map(movie => (\n              <Grid\n                lg={3}\n                md={4}\n                sm={6}\n                xs={12}\n                item\n                key={movie.id}\n              >\n                <Card>\n                  <CardMedia\n                    className={classes.media}\n                    image={movie.icon || 'https://media.wired.com/photos/5b7350e75fc74d47846ce4e4/master/pass/Popcorn-869302844.jpg'}\n                    title={`${movie.title} poster`}\n                  />\n                  <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      {transformTitle(movie.title)}\n                    </Typography>\n                    <Typography component=\"p\">\n                      Year:\n                      {' '}\n                      {movie.year}\n                    </Typography>\n                    <Typography component=\"p\">\n                      Runtime:\n                      {' '}\n                      {`${movie.runtime} min`}\n                    </Typography>\n                    <Typography component=\"p\">\n                      Genre:\n                      {' '}\n                      {movie.genre}\n                    </Typography>\n                    <Typography component=\"p\">\n                      Director:\n                      {' '}\n                      {movie.director}\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Button\n                      onClick={this.showEditMoviePopupHandler(movie.id)}\n                      size=\"small\"\n                      color=\"primary\"\n                    >\n                      Edit\n                    </Button>\n                    <Button\n                      onClick={this.showDeleteMoviePopupHandler(movie.id)}\n                      size=\"small\"\n                      color=\"primary\"\n                    >\n                      Delete\n                    </Button>\n                  </CardActions>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n          <IconButton\n            aria-label=\"Delete\"\n            className={classnames(classes.addBtn, 'ml-auto')}\n            onClick={showAddMovieModal}\n          >\n            <AddIco />\n          </IconButton>\n        </div>\n      </div>\n    )\n  }\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    id: PropTypes.string,\n    icon: PropTypes.string,\n    director: PropTypes.string,\n    runtime: PropTypes.number,\n    genre: PropTypes.string,\n    year: PropTypes.number,\n  })).isRequired,\n  classes: PropTypes.shape({ [PropTypes.string]: PropTypes.string }).isRequired,\n  getMovies: PropTypes.func.isRequired,\n  showDeleteMovieModal: PropTypes.func.isRequired,\n  showEditMovieModal: PropTypes.func.isRequired,\n  showAddMovieModal: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  movies: state.movies,\n})\n\nconst mapDispatchToProps = {\n  getMovies: getMoviesAction,\n  showDeleteMovieModal: showDeleteMovieModalAction,\n  showEditMovieModal: showEditMovieModalAction,\n  showAddMovieModal: showAddMovieModalAction,\n}\n\nconst enhancers = compose(\n  withStyles(styles),\n  connect(mapStateToProps, mapDispatchToProps),\n)\n\nexport default enhancers(MovieList)\n","import MovieList from './MovieList'\n\nexport default MovieList\n","export default () => ({\n  media: {\n    height: 450,\n  },\n  addBtn: {\n    marginTop: 10,\n    marginRight: 5,\n    backgroundColor: '#e0e0e0',\n  },\n  root: {\n    flexGrow: 1,\n    overflow: 'hidden',\n    padding: '50px',\n  },\n})\n","import { createSelector } from 'reselect'\n\nconst getAllMovies = state => state.movies\n\nexport const getMovieById = (movies, movieId) => movies.find(m => m.id === movieId)\n\nexport const getDataForMovieToDelete = createSelector(\n  getAllMovies,\n  state => state.ui.modals.movieToDeleteId,\n  getMovieById,\n)\nexport const getDataForMovieToEdit = createSelector(\n  getAllMovies,\n  state => state.ui.modals.movieToEditId,\n  getMovieById,\n)\n\nexport const getShownModal = state => state.ui.modals.shownModal\n","export default () => ({\n  paper: {\n    width: '100%',\n    outline: 'none',\n  },\n  yearSelectList: {\n    maxHeight: 400,\n    padding: 0,\n  },\n  inputField: {\n    marginBottom: 15,\n    marginTop: 15,\n  },\n  errorLabel: {\n    position: 'absolute',\n    bottom: -18,\n  },\n})\n","import React from 'react'\nimport { compose } from 'redux'\nimport PropTypes from 'prop-types'\n\nimport { connect } from 'react-redux'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nimport { MOVIE_DELETE_MODAL } from '../../../store/constants/modals'\nimport { hideDeleteMovieModal as hideDeleteMovieModalAction } from '../../../store/actions/modals'\nimport { deleteMovie as deleteMovieAction } from '../../../store/actions/movies'\nimport { getDataForMovieToDelete } from '../../../store/selectors/ui'\n\nimport styles from '../common/styles/MovieModal.style'\n\nconst MovieDeleteModal = (props) => {\n  const {\n    hideDeleteMovieModal,\n    shouldShow,\n    deleteMovie,\n    movie: {\n      id,\n    },\n  } = props\n  return (\n    <Dialog open={shouldShow} onClose={hideDeleteMovieModal}>\n      <DialogTitle>Are you sure want to delete this movie?</DialogTitle>\n      <DialogActions>\n        <Button onClick={hideDeleteMovieModal} color=\"primary\">\n          No\n        </Button>\n        <Button\n          onClick={() => {\n            deleteMovie(id)\n            hideDeleteMovieModal()\n          }}\n          color=\"primary\"\n          autoFocus\n        >\n          Yes\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nMovieDeleteModal.propTypes = {\n  shouldShow: PropTypes.bool.isRequired,\n  hideDeleteMovieModal: PropTypes.func.isRequired,\n  deleteMovie: PropTypes.func.isRequired,\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    id: PropTypes.string,\n    icon: PropTypes.string,\n    director: PropTypes.string,\n    runtime: PropTypes.number,\n    genre: PropTypes.string,\n    year: PropTypes.number,\n  }).isRequired,\n}\n\nconst mapStateToProps = state => ({\n  shouldShow: state.ui.modals.shownModal === MOVIE_DELETE_MODAL,\n  movie: getDataForMovieToDelete(state) || {},\n})\n\nconst mapDispatchToProps = {\n  hideDeleteMovieModal: hideDeleteMovieModalAction,\n  deleteMovie: deleteMovieAction,\n}\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  ),\n  withStyles(styles),\n)(MovieDeleteModal)\n","import MovieDeleteModal from './MovieDeleteModal'\n\nexport default MovieDeleteModal\n","export const required = value => (value ? undefined : 'Required Field')\nexport const range = (from, to) => value => ((value > from && value < to) ? undefined : `Should be more than ${from} and less than ${to}`)\n","import YearSelector from './YearSelector'\n\nexport default YearSelector\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withProps } from 'recompose'\nimport { TextField } from 'redux-form-material-ui'\nimport { Field } from 'redux-form'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport { required } from '../../../../../../../utils/validators'\n\nconst YearSelector = (props) => {\n  const {\n    startYear,\n    endYear,\n    classes,\n  } = props\n\n  const yearsArray = Array.from(new Array(endYear - startYear))\n\n  return (\n    <Field\n      fullWidth\n      select\n      label=\"Year\"\n      validate={[required]}\n      component={TextField}\n      name=\"year\"\n      className={classes.inputField}\n      FormHelperTextProps={{\n        className: classes.errorLabel,\n      }}\n      SelectProps={{\n        MenuProps: {\n          MenuListProps: {\n            className: classes.yearSelectList,\n          },\n        },\n      }}\n    >\n      {yearsArray.map((item, index) => {\n        const value = startYear + index\n        return (\n          <MenuItem key={value} value={value.toString()}>\n            {value}\n          </MenuItem>\n        )\n      })}\n    </Field>\n  )\n}\n\nYearSelector.propTypes = {\n  startYear: PropTypes.number.isRequired,\n  endYear: PropTypes.number.isRequired,\n  classes: PropTypes.shape({\n    paper: PropTypes.string,\n    inputField: PropTypes.string,\n    errorLabel: PropTypes.string,\n  }).isRequired,\n}\n\nexport default withProps({\n  startYear: 1900,\n  endYear: 2019,\n})(YearSelector)\n","import GenresSelector from './GenresSelector'\n\nexport default GenresSelector\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withProps } from 'recompose'\nimport { Field } from 'redux-form'\nimport { TextField } from 'redux-form-material-ui'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport { required } from '../../../../../../../utils/validators'\n\nconst GenresSelector = (props) => {\n  const {\n    genresList,\n    classes,\n  } = props\n\n  return (\n    <Field\n      fullWidth\n      select\n      multiple\n      label=\"Genre\"\n      className={classes.inputField}\n      validate={[required]}\n      component={TextField}\n      name=\"genre\"\n      FormHelperTextProps={{\n        className: classes.errorLabel,\n      }}\n      SelectProps={{\n        MenuProps: {\n          MenuListProps: {\n            className: classes.yearSelectList,\n          },\n        },\n      }}\n    >\n      {\n        genresList.map(value => (\n          <MenuItem key={value} value={value}>\n            {value}\n          </MenuItem>\n        ))\n      }\n    </Field>\n  )\n}\n\n\nGenresSelector.propTypes = {\n  genresList: PropTypes.arrayOf(PropTypes.string).isRequired,\n  classes: PropTypes.shape({\n    paper: PropTypes.string,\n    inputField: PropTypes.string,\n    errorLabel: PropTypes.string,\n  }).isRequired,\n}\n\nexport default withProps({\n  genresList: [\n    'Absurdist/surreal/whimsical',\n    'Action',\n    'Adventure',\n    'Comedy',\n    'Crime',\n    'Drama',\n    'Fantasy',\n    'Historical',\n    'Historical fiction',\n    'Horror',\n    'Magical realism',\n    'Mystery',\n    'Paranoid Fiction',\n    'Philosophical',\n    'Political',\n    'Romance',\n    'Saga',\n    'Satire',\n    'Science fiction',\n    'Social',\n    'Speculative',\n    'Thriller',\n    'Urban',\n    'Western',\n    'Animation',\n  ],\n})(GenresSelector)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { withProps } from 'recompose'\nimport { connect } from 'react-redux'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport Typography from '@material-ui/core/Typography'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport {\n  Field,\n  SubmissionError,\n  reduxForm,\n  reset as resetFormAction,\n} from 'redux-form'\nimport Button from '@material-ui/core/Button'\nimport { TextField } from 'redux-form-material-ui'\nimport InputAdornment from '@material-ui/core/InputAdornment'\n\nimport { required } from '../../../../../utils/validators'\nimport { getShownModal, getDataForMovieToEdit } from '../../../../../store/selectors/ui'\nimport { MOVIE_ADD_MODAL, MOVIE_EDIT_MODAL } from '../../../../../store/constants/modals'\nimport {\n  editMovie as editMovieAction,\n  addMovie as addMovieAction,\n} from '../../../../../store/actions/movies'\nimport {\n  hideEditMovieDataModal as hideEditMovieDataModalAction,\n} from '../../../../../store/actions/modals'\n\nimport YearSelector from './components/YearSelector'\nimport GenresSelector from './components/GenresSelector'\nimport styles from '../../styles/MovieModal.style'\n\nclass MovieDataForm extends Component {\n  handleSubmitClick = (values, dispatch, data) => {\n    const {\n      modalName,\n      addMovie,\n    } = this.props\n\n    const {\n      editMovie,\n    } = data\n\n    const isDuplicatingName = this.checkIsDuplicatingName(values.title, values.id)\n\n    if (isDuplicatingName) {\n      throw new SubmissionError({\n        title: 'Title already exist!',\n      })\n    }\n\n    if (modalName === MOVIE_EDIT_MODAL) {\n      editMovie(values)\n    }\n\n    if (modalName === MOVIE_ADD_MODAL) {\n      addMovie(values)\n    }\n\n    this.handleClose()\n  }\n\n  handleClose = () => {\n    const {\n      hideEditMovieDataModal,\n      reset,\n      modalName,\n    } = this.props\n\n    hideEditMovieDataModal()\n    reset(modalName)\n  }\n\n  checkIsDuplicatingName = (newTitle, movieId) => {\n    const {\n      movies,\n    } = this.props\n\n    return movies.some((movie) => {\n      const {\n        title,\n        id,\n      } = movie\n\n      return title.toLowerCase() === newTitle.toLowerCase() && id !== movieId\n    })\n  }\n\n  render() {\n    const {\n      classes,\n      handleSubmit,\n      isShown,\n      modalName,\n    } = this.props\n\n    const modalTitle = modalName === MOVIE_ADD_MODAL ? 'New Movie' : 'Edit Movie'\n\n    return (\n      <Dialog open={isShown} onClose={this.handleClose}>\n        <DialogTitle>\n          <Typography variant=\"h6\">\n            {modalTitle}\n          </Typography>\n        </DialogTitle>\n        <DialogContent>\n          <form className={classes.paper} onSubmit={handleSubmit(this.handleSubmitClick)}>\n            <Field\n              label=\"Title\"\n              fullWidth\n              validate={[required]}\n              component={TextField}\n              name=\"title\"\n              type=\"text\"\n              className={classes.inputField}\n              FormHelperTextProps={{\n                className: classes.errorLabel,\n              }}\n            />\n            <Field\n              label=\"Poster URL\"\n              fullWidth\n              component={TextField}\n              name=\"icon\"\n              type=\"text\"\n              className={classes.inputField}\n              FormHelperTextProps={{\n                className: classes.errorLabel,\n              }}\n            />\n            <YearSelector classes={classes} />\n            <GenresSelector classes={classes} />\n            <Field\n              label=\"Runtime\"\n              fullWidth\n              className={classes.inputField}\n              component={TextField}\n              validate={[required]}\n              name=\"runtime\"\n              type=\"number\"\n              InputProps={{\n                endAdornment: <InputAdornment position=\"end\">min</InputAdornment>,\n              }}\n              FormHelperTextProps={{\n                className: classes.errorLabel,\n              }}\n            />\n            <Field\n              fullWidth\n              className={classes.inputField}\n              component={TextField}\n              validate={[required]}\n              name=\"director\"\n              label=\"Director\"\n              type=\"text\"\n              FormHelperTextProps={{\n                className: classes.errorLabel,\n              }}\n            />\n            <DialogActions>\n              <Button onClick={this.handleClose}>\n                Cancel\n              </Button>\n              <Button type=\"submit\">Save</Button>\n            </DialogActions>\n          </form>\n        </DialogContent>\n      </Dialog>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const movieToEditData = getDataForMovieToEdit(state)\n\n  return ({\n    movies: state.movies,\n    isShown: getShownModal(state) === ownProps.modalName,\n    initialValues: {\n      ...state[ownProps.modalName],\n      ...(ownProps.modalName !== MOVIE_ADD_MODAL && movieToEditData\n        ? movieToEditData\n        : ownProps.initialValues),\n    },\n  })\n}\n\nconst mapDispatchToProps = {\n  editMovie: editMovieAction,\n  hideEditMovieDataModal: hideEditMovieDataModalAction,\n  addMovie: addMovieAction,\n  reset: resetFormAction,\n}\n\nconst initialValues = {\n  title: '',\n  genre: [''],\n  runtime: undefined,\n  director: '',\n  year: undefined,\n}\n\nMovieDataForm.propTypes = {\n  modalName: PropTypes.string.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  classes: PropTypes.shape({\n    paper: PropTypes.string,\n    inputField: PropTypes.string,\n    errorLabel: PropTypes.string,\n  }).isRequired,\n  hideEditMovieDataModal: PropTypes.func.isRequired,\n  addMovie: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n  isShown: PropTypes.bool.isRequired,\n  movies: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    id: PropTypes.string,\n    icon: PropTypes.string,\n    director: PropTypes.string,\n    runtime: PropTypes.number,\n    genre: PropTypes.string,\n    year: PropTypes.number,\n  })).isRequired,\n}\n\nexport default modalName => compose(\n  withProps({\n    initialValues,\n    modalName,\n  }),\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  ),\n  withStyles(styles),\n  reduxForm({ form: modalName, enableReinitialize: true }),\n)(MovieDataForm)\n","import MovieDataForm from './MovieDataForm'\n\nexport default MovieDataForm\n","import MovieEditModal from './MovieEditModal'\n\nexport default MovieEditModal\n","import createFrom from '../common/components/MovieDataForm'\nimport { MOVIE_EDIT_MODAL } from '../../../store/constants/modals'\n\nexport default createFrom(MOVIE_EDIT_MODAL)\n","import MovieAddModal from './MovieAddModal'\n\nexport default MovieAddModal\n","import createFrom from '../common/components/MovieDataForm'\nimport { MOVIE_ADD_MODAL } from '../../../store/constants/modals'\n\nexport default createFrom(MOVIE_ADD_MODAL)\n","import { createMuiTheme } from '@material-ui/core/styles'\n\nexport default createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n})\n","import App from './App'\n\nexport default App\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\n\nimport store from '../../store'\nimport MovieList from '../../components/MovieList'\nimport MovieDeleteModal from '../../components/modals/MovieDeleteModal'\nimport MovieEditModal from '../../components/modals/MovieEditModal'\nimport MovieAddModal from '../../components/modals/MovieAddModal'\nimport theme from './theme'\n\nconst App = () => (\n  <MuiThemeProvider theme={theme}>\n    <Provider store={store}>\n      <MovieList />\n      <MovieDeleteModal />\n      <MovieEditModal />\n      <MovieAddModal />\n    </Provider>\n  </MuiThemeProvider>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport 'bootstrap/scss/bootstrap-grid.scss'\nimport 'typeface-roboto'\n\nimport App from './pages/App'\n\nimport './static/styles/rootStyles.scss'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}