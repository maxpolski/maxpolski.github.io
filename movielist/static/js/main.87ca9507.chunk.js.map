{"version":3,"sources":["store/actions/movies.js","store/constants/movies.js","store/reducers/movies/index.js","store/reducers/movies/movies.js","store/constants/modals.js","store/actions/modals.js","store/reducers/ui/modals/index.js","store/reducers/ui/modals/modals.js","store/reducers/ui/index.js","store/reducers/index.js","config/index.js","api/movies.js","store/sagas/movies.js","store/sagas/index.js","store/index.js","components/MovieList/MovieList.js","components/MovieList/index.js","components/MovieList/MovieList.styles.js","store/selectors/ui.js","components/modals/common/styles/MovieModal.style.js","components/modals/MovieDeleteModal/MovieDeleteModal.js","components/modals/MovieDeleteModal/index.js","utils/validators.js","components/modals/common/components/MovieDataForm/components/YearSelector/index.js","components/modals/common/components/MovieDataForm/components/YearSelector/YearSelector.js","components/modals/common/components/MovieDataForm/components/GenresSelector/index.js","components/modals/common/components/MovieDataForm/components/GenresSelector/GenresSelector.js","components/modals/common/components/MovieDataForm/MovieDataForm.js","components/modals/common/components/MovieDataForm/index.js","components/modals/MovieEditModal/index.js","components/modals/MovieEditModal/MovieEditModal.js","components/modals/MovieAddModal/index.js","components/modals/MovieAddModal/MovieAddModal.js","pages/App/theme.js","pages/App/index.js","pages/App/App.js","index.js"],"names":["getMovies","createAction","getMoviesCompleted","editMovie","addMovie","addMovieCompleted","deleteMovie","moviesReducer","handleActions","_handleActions","Object","defineProperty","state","action","toConsumableArray","payload","filter","m","id","movieToEditIndex","findIndex","concat","slice","objectSpread","MOVIE_EDIT_MODAL","MOVIE_ADD_MODAL","showDeleteMovieModal","showEditMovieModal","showAddMovieModal","hideDeleteMovieModal","hideEditMovieDataModal","hideAddMovieModal","modalsReducer","modals_handleActions","shownModal","movieToDeleteId","movieToEditId","combineActions","undefined","combineReducers","modals","form","formReducer","movies","ui","config","Promise","all","map","split","join","fetch","then","r","json","fetchMoviesSaga","addMovieSaga","response","regenerator_default","a","wrap","_context","prev","next","call","sent","data","imdbID","icon","Poster","title","Title","genre","Genre","length","year","Number","parseInt","Year","director","Director","runtime","Runtime","put","stop","_marked","this","_context2","createId","_marked2","sagas_movies","takeEvery","rootSaga","moviesSagas","sagas_marked","sagaMiddleware","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","run","MovieList","showDeleteMoviePopupHandler","movieId","_this","props","showEditMoviePopupHandler","_this2","_this$props","classes","react_default","createElement","className","classnames","root","List_default","list","movie","ListItem_default","key","listItem","ListItemAvatar_default","Avatar_default","alt","src","ListItemText_default","primary","Fragment","Typography_default","variant","color","sentence","c","test","word","charAt","toUpperCase","secondary","component","ListItemSecondaryAction_default","IconButton_default","onClick","Delete_default","Edit_default","aria-label","addBtn","Add_default","Component","mapDispatchToProps","getMoviesAction","showDeleteMovieModalAction","showEditMovieModalAction","showAddMovieModalAction","withStyles","marginBottom","backgroundColor","alignItems","paddingBottom","marginTop","marginRight","height","connect","enhancers","getAllMovies","getMovieById","find","getDataForMovieToDelete","createSelector","getDataForMovieToEdit","getShownModal","MovieModal_style","theme","paper","position","width","spacing","unit","palette","background","boxShadow","shadows","padding","outline","top","left","breakpoints","down","bottom","right","yearSelectList","maxHeight","inputField","errorLabel","hideDeleteMovieModalAction","deleteMovieAction","MovieDeleteModal","shouldShow","styles","Dialog_default","open","onClose","DialogTitle_default","DialogActions_default","Button_default","autoFocus","required","value","isUrl","text","YearSelector","withProps","startYear","endYear","yearsArray","Array","from","Field","fullWidth","select","label","validate","TextField","name","FormHelperTextProps","SelectProps","MenuProps","MenuListProps","item","index","MenuItem_default","toString","GenresSelector","genresList","multiple","MovieDataForm","handleSubmitClick","values","dispatch","modalName","checkIsDuplicatingName","SubmissionError","handleClose","_this$props2","reset","newTitle","some","toLowerCase","_this$props3","handleSubmit","isShown","modalTitle","Modal_default","onSubmit","type","components_YearSelector","components_GenresSelector","InputProps","endAdornment","InputAdornment_default","mapStateToProps","ownProps","movieToEditData","initialValues","editMovieAction","hideEditMovieDataModalAction","addMovieAction","resetFormAction","reduxForm","enableReinitialize","MovieEditModal","createFrom","MovieAddModal","createMuiTheme","typography","useNextVariants","App","MuiThemeProvider_default","es","store","components_MovieList","modals_MovieDeleteModal","modals_MovieEditModal","modals_MovieAddModal","ReactDOM","render","pages_App","document","getElementById"],"mappings":"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","file":"static/js/main.87ca9507.chunk.js","sourcesContent":["import { createAction } from 'redux-actions'\n\nimport {\n  ADD_MOVIE,\n  DELETE_MOVIE,\n  GET_MOVIES,\n  GET_MOVIES_COMPLETED,\n  EDIT_MOVIE,\n  ADD_MOVIE_COMPLETED,\n} from '../constants/movies'\n\nexport const getMovies = createAction(GET_MOVIES)\nexport const getMoviesCompleted = createAction(GET_MOVIES_COMPLETED)\n\nexport const editMovie = createAction(EDIT_MOVIE)\n\nexport const addMovie = createAction(ADD_MOVIE)\nexport const addMovieCompleted = createAction(ADD_MOVIE_COMPLETED)\n\nexport const deleteMovie = createAction(DELETE_MOVIE)\n","export const GET_MOVIES = 'GET_MOVIES'\nexport const GET_MOVIES_COMPLETED = 'GET_MOVIES_COMPLETED'\nexport const GET_MOVIES_REJECTED = 'GET_MOVIES_REJECTED'\n\nexport const ADD_MOVIE = 'ADD_MOVIE'\nexport const ADD_MOVIE_COMPLETED = 'ADD_MOVIE_COMPLETED'\nexport const ADD_MOVIE_REJECTED = 'ADD_MOVIE_REJECTED'\n\nexport const EDIT_MOVIE = 'EDIT_MOVIE'\n\nexport const DELETE_MOVIE = 'DELETE_MOVIE'\nexport const DELETE_MOVIE_COMPLETED = 'DELETE_MOVIE_COMPLETED'\nexport const DELETE_MOVIE_REJECTED = 'DELETE_MOVIE_REJECTED'\n","import moviesReducer from './movies'\n\nexport default moviesReducer\n","import { handleActions } from 'redux-actions'\n\nimport {\n  getMoviesCompleted,\n  deleteMovie,\n  editMovie,\n  addMovieCompleted,\n} from '../../actions/movies'\n\nexport default handleActions({\n  [getMoviesCompleted]: (state, action) => [...action.payload],\n  [deleteMovie]: (state, action) => state.filter(m => m.id !== action.payload),\n  [editMovie]: (state, action) => {\n    const movieToEditIndex = state.findIndex(m => m.id === action.payload.id)\n    return [\n      ...state.slice(0, movieToEditIndex),\n      {\n        ...action.payload,\n      },\n      ...state.slice(movieToEditIndex + 1),\n    ]\n  },\n  [addMovieCompleted]: (state, action) => [...state, action.payload],\n}, [])\n","export const SHOW_DELETE_MOVIE_MODAL = 'SHOW_DELETE_MOVIE_MODAL'\nexport const SHOW_EDIT_MOVIE_MODAL = 'SHOW_EDIT_MOVIE_MODAL'\nexport const SHOW_ADD_MOVIE_MODAL = 'SHOW_ADD_MOVIE_MODAL'\n\nexport const HIDE_EDIT_MOVIE_DATA_MODAL = 'HIDE_EDIT_MOVIE_DATA_MODAL'\nexport const HIDE_ADD_MOVIE_MODAL = 'HIDE_ADD_MOVIE_MODAL'\nexport const HIDE_DELETE_MOVIE_MODAL = 'HIDE_DELETE_MOVIE_MODAL'\n\nexport const MOVIE_DELETE_MODAL = 'MOVIE_DELETE_MODAL'\nexport const MOVIE_EDIT_MODAL = 'MOVIE_EDIT_MODAL'\nexport const MOVIE_ADD_MODAL = 'MOVIE_ADD_MODAL'\n","import { createAction } from 'redux-actions'\n\nimport {\n  SHOW_DELETE_MOVIE_MODAL,\n  HIDE_DELETE_MOVIE_MODAL,\n  SHOW_EDIT_MOVIE_MODAL,\n  HIDE_EDIT_MOVIE_DATA_MODAL,\n  SHOW_ADD_MOVIE_MODAL,\n  HIDE_ADD_MOVIE_MODAL,\n} from '../constants/modals'\n\nexport const showDeleteMovieModal = createAction(SHOW_DELETE_MOVIE_MODAL)\nexport const showEditMovieModal = createAction(SHOW_EDIT_MOVIE_MODAL)\nexport const showAddMovieModal = createAction(SHOW_ADD_MOVIE_MODAL)\nexport const hideDeleteMovieModal = createAction(HIDE_DELETE_MOVIE_MODAL)\nexport const hideEditMovieDataModal = createAction(HIDE_EDIT_MOVIE_DATA_MODAL)\nexport const hideAddMovieModal = createAction(HIDE_ADD_MOVIE_MODAL)\n","import modalsReducer from './modals'\n\nexport default modalsReducer\n","import { handleActions, combineActions } from 'redux-actions'\n\nimport {\n  showDeleteMovieModal,\n  hideDeleteMovieModal,\n  showEditMovieModal,\n  hideEditMovieDataModal,\n  showAddMovieModal,\n  hideAddMovieModal,\n} from '../../../actions/modals'\nimport { MOVIE_DELETE_MODAL, MOVIE_EDIT_MODAL, MOVIE_ADD_MODAL } from '../../../constants/modals'\n\nexport default handleActions({\n  [showAddMovieModal]: state => ({\n    ...state,\n    shownModal: MOVIE_ADD_MODAL,\n  }),\n  [showDeleteMovieModal]: (state, action) => ({\n    ...state,\n    shownModal: MOVIE_DELETE_MODAL,\n    movieToDeleteId: action.payload,\n  }),\n  [showEditMovieModal]: (state, action) => ({\n    ...state,\n    shownModal: MOVIE_EDIT_MODAL,\n    movieToEditId: action.payload,\n  }),\n  [combineActions(hideDeleteMovieModal, hideEditMovieDataModal, hideAddMovieModal)]: state => ({\n    ...state,\n    shownModal: '',\n    movieToDeleteId: undefined,\n    movieToEditId: undefined,\n  }),\n}, { shownModal: '', movieToDeleteId: undefined, movieToEditId: undefined })\n","import { combineReducers } from 'redux'\n\nimport modalsReducer from './modals'\n\nexport default combineReducers({\n  modals: modalsReducer,\n})\n","import { combineReducers } from 'redux'\nimport { reducer as formReducer } from 'redux-form'\n\nimport movies from './movies'\nimport ui from './ui'\n\nexport default combineReducers({\n  form: formReducer,\n  movies,\n  ui,\n})\n","export default {\n  MOVIES_API_KEY: 'ee9fbbc',\n}\n","import config from '../config'\n\n// eslint-disable-next-line\nexport const getMovies = () => {\n  const moviesTitles = [\n    'The Grand Budapest Hotel',\n    'isle of dogs',\n    'the double',\n  ]\n\n  return Promise.all(\n    moviesTitles.map(m => m.split(' ').join('+')).map(\n      m => fetch(`https://www.omdbapi.com/?t=${m}&apikey=${config.MOVIES_API_KEY}`).then(r => r.json()),\n    ),\n  )\n}\n","import {\n  takeEvery, call, put,\n} from 'redux-saga/effects'\nimport createId from 'uniqid'\n\nimport { GET_MOVIES, ADD_MOVIE } from '../constants/movies'\nimport { getMoviesCompleted, addMovieCompleted } from '../actions/movies'\nimport { getMovies } from '../../api/movies'\n\nfunction* fetchMoviesSaga() {\n  const response = yield call(getMovies)\n\n  const movies = response.map(data => ({\n    id: data.imdbID,\n    icon: data.Poster,\n    title: data.Title,\n    genre: data.Genre.split(', ').length ? data.Genre.split(', ')[0] : data.Genre,\n    year: Number.parseInt(data.Year, 10),\n    director: data.Director,\n    runtime: Number.parseInt(data.Runtime.split(' ')[0], 10),\n  }))\n\n  yield put(getMoviesCompleted(movies))\n}\n\nfunction* addMovieSaga(action) {\n  const id = createId()\n\n  yield put(addMovieCompleted({ ...action.payload, id }))\n}\n\nexport default [takeEvery(GET_MOVIES, fetchMoviesSaga), takeEvery(ADD_MOVIE, addMovieSaga)]\n","import { all } from 'redux-saga/effects'\nimport moviesSagas from './movies'\n\nexport default function* rootSaga() {\n  yield all([...moviesSagas])\n}\n","import { applyMiddleware, compose, createStore } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\n\nimport rootReducer from './reducers'\nimport rootSaga from './sagas'\n\nconst sagaMiddleware = createSagaMiddleware()\n// eslint-disable-next-line no-underscore-dangle\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\n\nexport default createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware)),\n)\n\nsagaMiddleware.run(rootSaga)\n","import React, { Component } from 'react'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nimport classnames from 'classnames'\n\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\nimport Avatar from '@material-ui/core/Avatar'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Typography from '@material-ui/core/Typography'\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction'\nimport IconButton from '@material-ui/core/IconButton'\nimport EditIco from '@material-ui/icons/Edit'\nimport DeleteIco from '@material-ui/icons/Delete'\nimport AddIco from '@material-ui/icons/Add'\n\nimport { getMovies as getMoviesAction } from '../../store/actions/movies'\nimport {\n  showDeleteMovieModal as showDeleteMovieModalAction,\n  showEditMovieModal as showEditMovieModalAction,\n  showAddMovieModal as showAddMovieModalAction,\n} from '../../store/actions/modals'\n\nimport styles from './MovieList.styles'\n\nconst transformTitle = (title) => {\n  const removeSpecChars = sentence => sentence.split('').filter(c => /\\w|\\s/.test(c)).join('')\n  const capitalize = sentence => sentence.split(' ').map(\n    word => `${word.charAt(0).toUpperCase()}${word.slice(1)}`,\n  ).join(' ')\n\n  /* It could be written down with pipelines syntax in the following way\n  * ```\n  * title |> capitalize |> removeSpecChars\n  * ```\n  * but it requires the corresponding babel plugin\n  * which in its turn requires react-app-rewired to be installed\n  * as for me it is an overkill to add all these tools to enable one single feature\n  */\n  return compose(removeSpecChars, capitalize)(title)\n}\n\nclass MovieList extends Component {\n  componentDidMount() {\n    const {\n      getMovies,\n    } = this.props\n\n    getMovies()\n  }\n\n  showDeleteMoviePopupHandler = movieId => () => {\n    const {\n      showDeleteMovieModal,\n    } = this.props\n\n    showDeleteMovieModal(movieId)\n  }\n\n  showEditMoviePopupHandler = movieId => () => {\n    const {\n      showEditMovieModal,\n    } = this.props\n\n    showEditMovieModal(movieId)\n  }\n\n  render() {\n    const {\n      movies,\n      classes,\n      showAddMovieModal,\n    } = this.props\n\n    return (\n      <div className={classnames(classes.root, 'container-fluid')}>\n        <div className=\"row flex-wrap justify-content-center\">\n          <div className=\"col-xs-12 col-sm-8\">\n            <div className=\"row flex-column\">\n              <List className={classnames(classes.list, 'col-12')}>\n                {movies.map(movie => (\n                  <ListItem key={movie.id} className={classes.listItem}>\n                    <ListItemAvatar>\n                      <Avatar alt={`${movie.title} poster`} src={movie.icon} />\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={(\n                        <>\n                          <Typography variant=\"h6\" color=\"textPrimary\">\n                            {\n                              transformTitle(movie.title)\n                            }\n                          </Typography>\n                          {movie.genre}\n                        </>\n                      )}\n                      secondary={(\n                        <>\n                          <Typography component=\"span\" color=\"textPrimary\">\n                            {`${movie.year}, ${movie.runtime} min`}\n                          </Typography>\n                          {movie.director}\n                        </>\n                      )}\n                    />\n                    <ListItemSecondaryAction>\n                      <IconButton\n                        onClick={this.showDeleteMoviePopupHandler(movie.id)}\n                      >\n                        <DeleteIco />\n                      </IconButton>\n                      <IconButton\n                        onClick={this.showEditMoviePopupHandler(movie.id)}\n                      >\n                        <EditIco />\n                      </IconButton>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                ))}\n              </List>\n              <IconButton\n                aria-label=\"Delete\"\n                className={classnames(classes.addBtn, 'ml-auto')}\n                onClick={showAddMovieModal}\n              >\n                <AddIco />\n              </IconButton>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    id: PropTypes.string,\n    icon: PropTypes.string,\n    director: PropTypes.string,\n    runtime: PropTypes.number,\n    genre: PropTypes.string,\n    year: PropTypes.number,\n  })).isRequired,\n  classes: PropTypes.shape({ [PropTypes.string]: PropTypes.string }).isRequired,\n  getMovies: PropTypes.func.isRequired,\n  showDeleteMovieModal: PropTypes.func.isRequired,\n  showEditMovieModal: PropTypes.func.isRequired,\n  showAddMovieModal: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  movies: state.movies,\n})\n\nconst mapDispatchToProps = {\n  getMovies: getMoviesAction,\n  showDeleteMovieModal: showDeleteMovieModalAction,\n  showEditMovieModal: showEditMovieModalAction,\n  showAddMovieModal: showAddMovieModalAction,\n}\n\nconst enhancers = compose(\n  withStyles(styles),\n  connect(mapStateToProps, mapDispatchToProps),\n)\n\nexport default enhancers(MovieList)\n","import MovieList from './MovieList'\n\nexport default MovieList\n","export default () => ({\n  listItem: {\n    marginBottom: 10,\n    backgroundColor: '#fff',\n    alignItems: 'flex-start',\n  },\n  list: {\n    paddingBottom: 0,\n  },\n  addBtn: {\n    marginTop: 10,\n    marginRight: 5,\n    backgroundColor: '#fff',\n  },\n  root: {\n    height: '100%',\n  },\n})\n","import { createSelector } from 'reselect'\n\nconst getAllMovies = state => state.movies\n\nexport const getMovieById = (movies, movieId) => movies.find(m => m.id === movieId)\n\nexport const getDataForMovieToDelete = createSelector(\n  getAllMovies,\n  state => state.ui.modals.movieToDeleteId,\n  getMovieById,\n)\nexport const getDataForMovieToEdit = createSelector(\n  getAllMovies,\n  state => state.ui.modals.movieToEditId,\n  getMovieById,\n)\n\nexport const getShownModal = state => state.ui.modals.shownModal\n","export default theme => ({\n  paper: {\n    position: 'absolute',\n    width: theme.spacing.unit * 50,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n    outline: 'none',\n    top: 200,\n    left: `calc(50% - ${theme.spacing.unit * 50 / 2}px)`,\n    [theme.breakpoints.down('sm')]: {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: 'auto',\n    },\n  },\n  yearSelectList: {\n    maxHeight: 400,\n    padding: 0,\n  },\n  inputField: {\n    marginBottom: 15,\n    marginTop: 15,\n  },\n  errorLabel: {\n    position: 'absolute',\n    bottom: -18,\n  },\n})\n","import React from 'react'\nimport { compose } from 'redux'\nimport PropTypes from 'prop-types'\n\nimport { connect } from 'react-redux'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogTitle from '@material-ui/core/DialogTitle'\n\nimport { MOVIE_DELETE_MODAL } from '../../../store/constants/modals'\nimport { hideDeleteMovieModal as hideDeleteMovieModalAction } from '../../../store/actions/modals'\nimport { deleteMovie as deleteMovieAction } from '../../../store/actions/movies'\nimport { getDataForMovieToDelete } from '../../../store/selectors/ui'\n\nimport styles from '../common/styles/MovieModal.style'\n\nconst MovieDeleteModal = (props) => {\n  const {\n    hideDeleteMovieModal,\n    shouldShow,\n    deleteMovie,\n    movie: {\n      id,\n    },\n  } = props\n  return (\n    <Dialog open={shouldShow} onClose={hideDeleteMovieModal}>\n      <DialogTitle>Are you sure want to delete this movie?</DialogTitle>\n      <DialogActions>\n        <Button onClick={hideDeleteMovieModal} color=\"primary\">\n          No\n        </Button>\n        <Button\n          onClick={() => {\n            deleteMovie(id)\n            hideDeleteMovieModal()\n          }}\n          color=\"primary\"\n          autoFocus\n        >\n          Yes\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nMovieDeleteModal.propTypes = {\n  shouldShow: PropTypes.bool.isRequired,\n  hideDeleteMovieModal: PropTypes.func.isRequired,\n  deleteMovie: PropTypes.func.isRequired,\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    id: PropTypes.string,\n    icon: PropTypes.string,\n    director: PropTypes.string,\n    runtime: PropTypes.number,\n    genre: PropTypes.string,\n    year: PropTypes.number,\n  }).isRequired,\n}\n\nconst mapStateToProps = state => ({\n  shouldShow: state.ui.modals.shownModal === MOVIE_DELETE_MODAL,\n  movie: getDataForMovieToDelete(state) || {},\n})\n\nconst mapDispatchToProps = {\n  hideDeleteMovieModal: hideDeleteMovieModalAction,\n  deleteMovie: deleteMovieAction,\n}\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  ),\n  withStyles(styles),\n)(MovieDeleteModal)\n","import MovieDeleteModal from './MovieDeleteModal'\n\nexport default MovieDeleteModal\n","export const required = value => (value ? undefined : 'Required Field')\nexport const range = (from, to) => value => ((value > from && value < to) ? undefined : `Should be more than ${from} and less than ${to}`)\nexport const isUrl = text => (/^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test(text)\n  ? undefined\n  : 'Should be a valid url')\n","import YearSelector from './YearSelector'\n\nexport default YearSelector\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withProps } from 'recompose'\nimport { TextField } from 'redux-form-material-ui'\nimport { Field } from 'redux-form'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport { required } from '../../../../../../../utils/validators'\n\nconst YearSelector = (props) => {\n  const {\n    startYear,\n    endYear,\n    classes,\n  } = props\n\n  const yearsArray = Array.from(new Array(endYear - startYear))\n\n  return (\n    <Field\n      fullWidth\n      select\n      label=\"Year\"\n      validate={[required]}\n      component={TextField}\n      name=\"year\"\n      className={classes.inputField}\n      FormHelperTextProps={{\n        className: classes.errorLabel,\n      }}\n      SelectProps={{\n        MenuProps: {\n          MenuListProps: {\n            className: classes.yearSelectList,\n          },\n        },\n      }}\n    >\n      {yearsArray.map((item, index) => {\n        const value = startYear + index\n        return (\n          <MenuItem key={value} value={value.toString()}>\n            {value}\n          </MenuItem>\n        )\n      })}\n    </Field>\n  )\n}\n\nYearSelector.propTypes = {\n  startYear: PropTypes.number.isRequired,\n  endYear: PropTypes.number.isRequired,\n  classes: PropTypes.shape({\n    paper: PropTypes.string,\n    inputField: PropTypes.string,\n    errorLabel: PropTypes.string,\n  }).isRequired,\n}\n\nexport default withProps({\n  startYear: 1900,\n  endYear: 2019,\n})(YearSelector)\n","import GenresSelector from './GenresSelector'\n\nexport default GenresSelector\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withProps } from 'recompose'\nimport { Field } from 'redux-form'\nimport { TextField } from 'redux-form-material-ui'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nimport { required } from '../../../../../../../utils/validators'\n\nconst GenresSelector = (props) => {\n  const {\n    genresList,\n    classes,\n  } = props\n\n  return (\n    <Field\n      fullWidth\n      select\n      multiple\n      label=\"Genre\"\n      className={classes.inputField}\n      validate={[required]}\n      component={TextField}\n      name=\"genre\"\n      FormHelperTextProps={{\n        className: classes.errorLabel,\n      }}\n      SelectProps={{\n        MenuProps: {\n          MenuListProps: {\n            className: classes.yearSelectList,\n          },\n        },\n      }}\n    >\n      {\n        genresList.map(value => (\n          <MenuItem key={value} value={value}>\n            {value}\n          </MenuItem>\n        ))\n      }\n    </Field>\n  )\n}\n\n\nGenresSelector.propTypes = {\n  genresList: PropTypes.arrayOf(PropTypes.string).isRequired,\n  classes: PropTypes.shape({\n    paper: PropTypes.string,\n    inputField: PropTypes.string,\n    errorLabel: PropTypes.string,\n  }).isRequired,\n}\n\nexport default withProps({\n  genresList: [\n    'Absurdist/surreal/whimsical',\n    'Action',\n    'Adventure',\n    'Comedy',\n    'Crime',\n    'Drama',\n    'Fantasy',\n    'Historical',\n    'Historical fiction',\n    'Horror',\n    'Magical realism',\n    'Mystery',\n    'Paranoid Fiction',\n    'Philosophical',\n    'Political',\n    'Romance',\n    'Saga',\n    'Satire',\n    'Science fiction',\n    'Social',\n    'Speculative',\n    'Thriller',\n    'Urban',\n    'Western',\n    'Animation',\n  ],\n})(GenresSelector)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'redux'\nimport { withProps } from 'recompose'\nimport { connect } from 'react-redux'\nimport Modal from '@material-ui/core/Modal'\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport Typography from '@material-ui/core/Typography'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport {\n  Field,\n  SubmissionError,\n  reduxForm,\n  reset as resetFormAction,\n} from 'redux-form'\nimport Button from '@material-ui/core/Button'\nimport { TextField } from 'redux-form-material-ui'\nimport InputAdornment from '@material-ui/core/InputAdornment'\n\nimport { required, isUrl } from '../../../../../utils/validators'\nimport { getShownModal, getDataForMovieToEdit } from '../../../../../store/selectors/ui'\nimport { MOVIE_ADD_MODAL, MOVIE_EDIT_MODAL } from '../../../../../store/constants/modals'\nimport {\n  editMovie as editMovieAction,\n  addMovie as addMovieAction,\n} from '../../../../../store/actions/movies'\nimport {\n  hideEditMovieDataModal as hideEditMovieDataModalAction,\n} from '../../../../../store/actions/modals'\n\nimport YearSelector from './components/YearSelector'\nimport GenresSelector from './components/GenresSelector'\nimport styles from '../../styles/MovieModal.style'\n\nclass MovieDataForm extends Component {\n  handleSubmitClick = (values, dispatch, data) => {\n    const {\n      modalName,\n      addMovie,\n    } = this.props\n\n    const {\n      editMovie,\n    } = data\n\n    const isDuplicatingName = this.checkIsDuplicatingName(values.title, values.id)\n\n    if (isDuplicatingName) {\n      throw new SubmissionError({\n        title: 'Title already exist!',\n      })\n    }\n\n    if (modalName === MOVIE_EDIT_MODAL) {\n      editMovie(values)\n    }\n\n    if (modalName === MOVIE_ADD_MODAL) {\n      addMovie(values)\n    }\n\n    this.handleClose()\n  }\n\n  handleClose = () => {\n    const {\n      hideEditMovieDataModal,\n      reset,\n      modalName,\n    } = this.props\n\n    hideEditMovieDataModal()\n    reset(modalName)\n  }\n\n  checkIsDuplicatingName = (newTitle, movieId) => {\n    const {\n      movies,\n    } = this.props\n\n    return movies.some((movie) => {\n      const {\n        title,\n        id,\n      } = movie\n\n      return title.toLowerCase() === newTitle.toLowerCase() && id !== movieId\n    })\n  }\n\n  render() {\n    const {\n      classes,\n      handleSubmit,\n      isShown,\n      modalName,\n    } = this.props\n\n    const modalTitle = modalName === MOVIE_ADD_MODAL ? 'New Movie' : 'Edit Movie'\n\n    return (\n      <Modal open={isShown} onClose={this.handleClose}>\n        <form className={classes.paper} onSubmit={handleSubmit(this.handleSubmitClick)}>\n          <Typography variant=\"h6\">\n            {modalTitle}\n          </Typography>\n          <Field\n            label=\"Title\"\n            fullWidth\n            validate={[required]}\n            component={TextField}\n            name=\"title\"\n            type=\"text\"\n            className={classes.inputField}\n            FormHelperTextProps={{\n              className: classes.errorLabel,\n            }}\n          />\n          <Field\n            label=\"Poster URL\"\n            fullWidth\n            validate={[required, isUrl]}\n            component={TextField}\n            name=\"icon\"\n            type=\"text\"\n            className={classes.inputField}\n            FormHelperTextProps={{\n              className: classes.errorLabel,\n            }}\n          />\n          <YearSelector classes={classes} />\n          <GenresSelector classes={classes} />\n          <Field\n            label=\"Runtime\"\n            fullWidth\n            className={classes.inputField}\n            component={TextField}\n            validate={[required]}\n            name=\"runtime\"\n            type=\"number\"\n            InputProps={{\n              endAdornment: <InputAdornment position=\"end\">min</InputAdornment>,\n            }}\n            FormHelperTextProps={{\n              className: classes.errorLabel,\n            }}\n          />\n          <Field\n            fullWidth\n            className={classes.inputField}\n            component={TextField}\n            validate={[required]}\n            name=\"director\"\n            label=\"Director\"\n            type=\"text\"\n            FormHelperTextProps={{\n              className: classes.errorLabel,\n            }}\n          />\n          <DialogActions>\n            <Button onClick={this.handleClose}>\n              Cancel\n            </Button>\n            <Button type=\"submit\">Save</Button>\n          </DialogActions>\n        </form>\n      </Modal>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const movieToEditData = getDataForMovieToEdit(state)\n\n  return ({\n    movies: state.movies,\n    isShown: getShownModal(state) === ownProps.modalName,\n    initialValues: {\n      ...state[ownProps.modalName],\n      ...(ownProps.modalName !== MOVIE_ADD_MODAL && movieToEditData\n        ? movieToEditData\n        : ownProps.initialValues),\n    },\n  })\n}\n\nconst mapDispatchToProps = {\n  editMovie: editMovieAction,\n  hideEditMovieDataModal: hideEditMovieDataModalAction,\n  addMovie: addMovieAction,\n  reset: resetFormAction,\n}\n\nconst initialValues = {\n  title: '',\n  genre: [''],\n  runtime: undefined,\n  director: '',\n  year: undefined,\n}\n\nMovieDataForm.propTypes = {\n  modalName: PropTypes.string.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  classes: PropTypes.shape({\n    paper: PropTypes.string,\n    inputField: PropTypes.string,\n    errorLabel: PropTypes.string,\n  }).isRequired,\n  hideEditMovieDataModal: PropTypes.func.isRequired,\n  addMovie: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n  isShown: PropTypes.bool.isRequired,\n  movies: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    id: PropTypes.string,\n    icon: PropTypes.string,\n    director: PropTypes.string,\n    runtime: PropTypes.number,\n    genre: PropTypes.string,\n    year: PropTypes.number,\n  })).isRequired,\n}\n\nexport default modalName => compose(\n  withProps({\n    initialValues,\n    modalName,\n  }),\n  connect(\n    mapStateToProps,\n    mapDispatchToProps,\n  ),\n  withStyles(styles),\n  reduxForm({ form: modalName, enableReinitialize: true }),\n)(MovieDataForm)\n","import MovieDataForm from './MovieDataForm'\n\nexport default MovieDataForm\n","import MovieEditModal from './MovieEditModal'\n\nexport default MovieEditModal\n","import createFrom from '../common/components/MovieDataForm'\nimport { MOVIE_EDIT_MODAL } from '../../../store/constants/modals'\n\nexport default createFrom(MOVIE_EDIT_MODAL)\n","import MovieAddModal from './MovieAddModal'\n\nexport default MovieAddModal\n","import createFrom from '../common/components/MovieDataForm'\nimport { MOVIE_ADD_MODAL } from '../../../store/constants/modals'\n\nexport default createFrom(MOVIE_ADD_MODAL)\n","import { createMuiTheme } from '@material-ui/core/styles'\n\nexport default createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n})\n","import App from './App'\n\nexport default App\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider'\n\nimport store from '../../store'\nimport MovieList from '../../components/MovieList'\nimport MovieDeleteModal from '../../components/modals/MovieDeleteModal'\nimport MovieEditModal from '../../components/modals/MovieEditModal'\nimport MovieAddModal from '../../components/modals/MovieAddModal'\nimport theme from './theme'\n\nconst App = () => (\n  <MuiThemeProvider theme={theme}>\n    <Provider store={store}>\n      <MovieList />\n      <MovieDeleteModal />\n      <MovieEditModal />\n      <MovieAddModal />\n    </Provider>\n  </MuiThemeProvider>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport 'bootstrap/scss/bootstrap-grid.scss'\nimport 'typeface-roboto'\n\nimport App from './pages/App'\n\nimport './static/styles/rootStyles.scss'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}